class Solution {
public:
    int longestConsecutive(vector<int>& nums) {

        int n = nums.size();
        if (nums.size() == 0) {
            return 0;
        }

        int k = 1;
        int maxk = 1;
        set<int> s;
        map<int, bool> m;

        for (int i = 0; i < n; i++) {

            s.insert(nums[i]);
            m[nums[i]] = true;
        }

        for (auto it : s) {

            if (m[it - 1] == false) {

                int cnt = 1;
                int x = it;

                while (m[x + 1] == true) {
                    // continue;
                    x = x + 1;
                    cnt = cnt + 1;
                }

                maxk = max(maxk, cnt);
            }

            //   k = 1;
        }

        // maxk = max(maxk, k);
        return maxk;
    }
};
